@model BugTracker.Application.Dto.Tickets.TicketDetailsDto;

<div class="modal-header d-flex flex-column pl-0 pb-0">
    <div class="w-100 d-flex align-items-center pl-2 pb-2">
        <h5 class="modal-title" id="ticket-details-modal-label">Ticket details</h5>

        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <ul class="nav nav-tabs ticket-tabs">

        <li class="nav-item">
            <a class="nav-link active" href="#">Description</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Comments</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">Team</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#">History</a>
        </li>
    </ul>
</div>
<div class="modal-body modal-right overflow-auto">

    <div id="ticket-description" class="w-100 h-100 tab-content p-1">
        <div class="w-100 h-100 d-flex align-items-center">Hi mark</div>
    </div>

    <div id="ticket-history" class="w-100 h-100 p-2 tab-content d-none">
        <div id="accordion" class="@(Model.History.Count < 6 ? "d-flex flex-column-reverse" : "")'">
            <div class="w-100 d-flex  align-items-center flex-column-reverse overflow-auto" id="history-holder">
                @foreach (var item in Model.History)
                {
                    <div class="card p-3">
                        <div class="card-header d-flex justify-content-between align-items-center p-0" id="headingOne">
                            <h5 class="mb-0">
                                <button class="btn btn-link btn-block text-left text-purple" type="button" data-toggle="collapse" data-target="#collapse@(item.Id)" aria-expanded="false" aria-controls="collapse@(item.Id)">
                                    @item.DateTime
                                </button>
                            </h5>

                            <span class="history-pill @(item.Type.ToLower())">@(item.Type + "d")</span>
                        </div>

                        <div id="collapse@(item.Id)" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                            <div class="card-body">
                                @if (item.Type == "Create")
                                {
                                    <p>Ticket created by <span class="font-weight-bold text-purple">@item.User</span></p>
                                }
                                else
                                {
                                    <p>Ticket updated by <span class="font-weight-bold text-purple">@item.User</span></p>

                                    for (int i = 0; i < item.NewValues.Count; i++)
                                    {

                                        var current = item.NewValues.ElementAt(i);

                                        if (i >= 0 && i < item.OldValues.Count())
                                        {
                                            var old = item.OldValues.ElementAt(i);
                                            var itemKey = old.Key;
                                            if (itemKey == "EstimatedAmountOfHours")
                                            {
                                                itemKey = "Estimated amount of hours";
                                            }

                                            <p>
                                                <span class="font-weight-bold">@itemKey:</span> <br />
                                                <span class="text-success">New Value:</span> @(string.IsNullOrEmpty((string)current.Value) ? "Empty" : current.Value)  <br />
                                                <span class="text-warning">Old value</span>: @(string.IsNullOrEmpty((string)old.Value) ? "Empty" : old.Value)
                                            </p>
                                        }
                                        else
                                        {
                                            <p>
                                                <span class="font-weight-bold">@current.Key </span> <br />
                                                @{
                                                    var userList = current.Value.Split(";").OrderBy(u => u.Split("-")[1]);
                                                    foreach (var user in userList)
                                                    {
                                                        @user <br />
                                                    }
                                                }
                                            </p>
                                        }

                                    }

                                }
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
    <div class="w-100 h-100 tab-content d-none" id="ticket-comments">

        <partial name="../Ticket/_commentTicketModalPartial.cshtml" model="Model.Comments" />

    </div>

    <div class="w-100 h-100 tab-content d-none" id="ticket-team">
        <div class="p-3 w-100">
            <div class="ticket-project-manager-holder p-2">
                <span class="purple-pill d-inline-block">Frank loyd - Project manager</span>
            </div>
            <div class="ticket-dev-holder p-2">
                @for (int i = 0; i < 12; i++)
                {
                    <span class="green-pill d-inline-block">John Doe - Dev</span>

                }
            </div>
            <div class="ticket-submitter-holder p-2">
                <span class="yellow-pill d-inline-block">Alan Wu - Submitter</span>
            </div>

        </div>
    </div>
</div>

